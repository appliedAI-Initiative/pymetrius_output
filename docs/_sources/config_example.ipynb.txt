{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "# The configuration utils\n",
    "\n",
    "You decided to opt in to use appliedAI's [accsr](https://github.com/appliedAI-Initiative/accsr) package to manage\n",
    "configuration for you project - great choice :). In this template, you see a minimal usage of it. The `config.py`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-13T11:05:18.773534Z",
     "iopub.status.busy": "2022-01-13T11:05:18.772763Z",
     "iopub.status.idle": "2022-01-13T11:05:18.787118Z",
     "shell.execute_reply": "2022-01-13T11:05:18.787600Z"
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "# Note - this cell should be executed only once per session\n",
    "\n",
    "%load_ext autoreload\n",
    "%autoreload 2\n",
    "\n",
    "import sys, os\n",
    "\n",
    "# in order to get the config (it is not part of the library) and sane paths to data\n",
    "if os.path.basename(os.getcwd()) != \"notebooks\":\n",
    "    raise Exception(f\"Wrong directory. Did you execute this cell twice?\")\n",
    "os.chdir(\"..\")\n",
    "sys.path.append(os.path.abspath(\".\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-13T11:05:18.795482Z",
     "iopub.status.busy": "2022-01-13T11:05:18.794775Z",
     "iopub.status.idle": "2022-01-13T11:05:18.806522Z",
     "shell.execute_reply": "2022-01-13T11:05:18.808483Z"
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "from config import get_config\n",
    "\n",
    "c  = get_config(reload=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-01-13T11:05:18.814546Z",
     "iopub.status.busy": "2022-01-13T11:05:18.813943Z",
     "iopub.status.idle": "2022-01-13T11:05:18.831243Z",
     "shell.execute_reply": "2022-01-13T11:05:18.832107Z"
    },
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Place your real and sample data in the proposed directory structure. Access the files from anywhere in your\n",
      "code through the corresponding configuration methods\n"
     ]
    }
   ],
   "source": [
    "# Here an example for using the config for finding and loading files\n",
    "\n",
    "sample_file = c.datafile_path(\"hello.txt\", stage=c.RAW)\n",
    "\n",
    "with open(sample_file) as file:\n",
    "    print(file.read())"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
